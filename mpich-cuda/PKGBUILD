# Maintainer: Jed Brown <jed@59A2.org>
# Contributor: Jed Brown <jed@59A2.org>
# Contributor: George Eleftheriou <eleftg>

pkgname=mpich-cuda
_true_pkgname=mpich
pkgver=4.2.0
pkgrel=1
pkgdesc="An improved implementation of the Message Passing Interface."
url="https://mpich.org"
arch=(x86_64)
license=("custom")
replaces=(mpich2)
depends=('gcc-fortran' 'libxml2' 'openssh' 'numactl' 'pciutils' 'hwloc' 'bash' 'cuda')
makedepends=(texlive-core sowing autoconf python)
optdepends=(perl python)
install="${_true_pkgname}.install"
source=("https://www.mpich.org/static/downloads/${pkgver}/${_true_pkgname}-${pkgver}.tar.gz"
	"mpich.profile")
sha256sums=('a64a66781b9e5312ad052d32689e23252f745b27ee8818ac2ac0c8209bc0b90e'
            'f9e0a5b9bdac8013dc9780be0d25b28c76aa68e0f4da7f5891c1358ea308e560')
options=('!libtool')

build() {
  cd ${srcdir}/${_true_pkgname}-${pkgver}

  # https://github.com/openucx/ucx/pull/8450
  sed -i -e 's/\<PTR\>/void */' modules/ucx/src/ucs/debug/debug.c

  # CFLAGS etc are normally written into the wrapper compilers.  This
  # gives surprising results, e.g. when the user wants to compile their
  # program without optimization.
  export MPICHLIB_CFLAGS="${CFLAGS}";      unset CFLAGS
  export MPICHLIB_CXXFLAGS="${CXXFLAGS}";  unset CXXFLAGS
  export MPICHLIB_CPPFLAGS="${CPPFLAGS}";  unset CPPFLAGS
  export MPICHLIB_FFLAGS="${FFLAGS}";      unset FFLAGS
  export MPICHLIB_FCFLAGS="${FCFLAGS}";    unset FCFLAGS
  export MPICHLIB_LDFLAGS="${LDFLAGS}";    unset LDFLAGS

  mkdir -p build
  cd build

  ../configure --prefix=/opt/mpich-cuda \
               --with-device=ch3:sock \
               --with-hwloc \
               --with-cuda=/opt/cuda \
               --without-java \
               --without-ze \
               --enable-error-checking=runtime \
               --enable-error-messages=all \
               CC=gcc-13 CXX=g++-13 FC=gfortran-13

  make -j16
  make mandoc
}

check() {
  cd ${srcdir}/${_true_pkgname}-${pkgver}/build

  # Disabled for mpich-3.4 due to json-c test failure
  # make check
}

package() {
  cd "${srcdir}/${_true_pkgname}-${pkgver}/build"
  make DESTDIR="${pkgdir}" install

  ln -sf mpiexec.hydra "${pkgdir}/opt/mpich-cuda/bin/mpirun.hydra"

  # Don't do this
  # install -D -m644 "${srcdir}/${_true_pkgname}-${pkgver}/COPYRIGHT" "${pkgdir}/usr/share/licenses/mpich/license.txt"
  # install -D -m755 "${srcdir}/${_true_pkgname}.profile" "${pkgdir}/etc/profile.d/mpich.sh"

  # mkdir -p "${pkgdir}/etc/ld.so.conf.d"
  # echo /opt/mpich/lib > "${pkgdir}/etc/ld.so.conf.d/mpich.conf"
}

